
'use client'

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { useDispatch } from 'react-redux';
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { useToast } from "@/hooks/use-toast";
import { addUser, UserRole } from '@/lib/redux/slices/usersSlice';
import { setCurrentUser } from '@/lib/redux/slices/authSlice';
import Link from 'next/link';

export default function SignUpPage() {
    const [firstName, setFirstName] = useState('');
    const [lastName, setLastName] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const router = useRouter();
    const dispatch = useDispatch();
    const { toast } = useToast();

    const handleSignUp = () => {
        if (!firstName || !lastName || !email || !password) {
            toast({
                title: "Missing Information",
                description: "Please fill out all fields.",
                variant: "destructive",
            });
            return;
        }

        const newUserPayload = {
            firstName,
            lastName,
            email,
            role: 'Author' as UserRole, // Default role for new sign-ups
        };

        dispatch(addUser(newUserPayload));
        
        // In a real app, you would get the full user object back after creation
        // For now, we construct a partial one to log the user in.
        const newUser = {
          ...newUserPayload,
          id: '', // ID will be generated by the reducer
          avatar: '',
          lastLogin: new Date().toISOString(),
          status: 'Active',
          type: 'Platform',
        }
        
        dispatch(setCurrentUser(newUser as any));

        toast({
            title: "Account Created",
            description: "Welcome! Your account has been successfully created.",
        });

        router.push('/dashboard');
    };

    return (
        <Card className="w-full max-w-sm">
            <CardHeader className="text-center">
                <CardTitle className="text-2xl">Create an Account</CardTitle>
                <CardDescription>Enter your information to get started.</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                    <div className="space-y-2">
                        <Label htmlFor="firstName">First Name</Label>
                        <Input id="firstName" value={firstName} onChange={(e) => setFirstName(e.target.value)} />
                    </div>
                     <div className="space-y-2">
                        <Label htmlFor="lastName">Last Name</Label>
                        <Input id="lastName" value={lastName} onChange={(e) => setLastName(e.target.value)} />
                    </div>
                </div>
                <div className="space-y-2">
                    <Label htmlFor="email">Email</Label>
                    <Input id="email" type="email" placeholder="name@example.com" value={email} onChange={(e) => setEmail(e.target.value)} />
                </div>
                <div className="space-y-2">
                    <Label htmlFor="password">Password</Label>
                    <Input id="password" type="password" value={password} onChange={(e) => setPassword(e.target.value)} />
                </div>
                <Button onClick={handleSignUp} className="w-full">Sign Up</Button>
                 <div className="mt-4 text-center text-sm">
                    Already have an account?{' '}
                    <Link href="/auth/signin" className="underline">
                        Sign in
                    </Link>
                </div>
            </CardContent>
        </Card>
    );
}
